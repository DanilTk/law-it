spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: https://www.googleapis.com/service_accounts/v1/jwk/fir-poc-b1a3d
          issuer-uri: https://securetoken.google.com/fir-poc-b1a3d
  thymeleaf:
    check-template-location: false
  cloud:
    gcp:
      storage:
        project-id: ${GCP_PROJECT_ID}
        bucket-name: ${GCP_BUCKET_NAME}
        domain: https://storage.googleapis.com/
        credentials:
          location: ${GCP_CREDENTIALS_LOCATION}
  cache:
    cache-names:
      - rate-limit-files-bucket-cache
      - rate-limit-authorization-cache
      - payment-gateway-token-cache
    caffeine:
      spec: maximumSize=100000,expireAfterAccess=3600s
  docker:
    compose:
      enabled: false
  application:
    name: lawit-api
  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        generate_statistics: false
  liquibase:
    change-log: classpath:db.changelog/db.changelog-master.yaml
  quartz:
    job-store-type: jdbc
    jdbc:
      initialize-schema: never
      schema: quartz
    properties:
      org:
        quartz:
          scheduler:
            instanceId: AUTO
            instanceName: application-scheduler
          jobStore:
            tablePrefix: quartz.qrtz_
            driverDelegateClass: org.quartz.impl.jdbcjobstore.PostgreSQLDelegate
            misfireThreshold: 60000
            clusterCheckinInterval: 5000
    wait-for-jobs-to-complete-on-shutdown: true
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
      resolve-lazily: true

logging:
  level:
    root: INFO
    org.hibernate: WARN
    liquibase: WARN
    org.postgresql: WARN
    com.zaxxer.hikari: WARN
    org.quartz: WARN
    org.springframework.jms: WARN
    org.springframework.scheduling.quartz: WARN
    org.springframework.web.socket: WARN
    org.springframework.web.socket.config: WARN
    org.springframework: INFO

bucket4j:
  filters:
    - cache-name: rate-limit-files-bucket-cache
      url: /api-web/files.*
      strategy: first
      http-response-body: '{"statusCode": 429, "message": "Too many requests."}'
      rate-limits:
        - execute-condition: "getMethod().equals('POST')"
          bandwidths:
            - capacity: 10
              time: 1
              unit: minutes
    - cache-name: rate-limit-authorization-cache
      url: /api-web/.*
      filter-order: -200
      strategy: first
      http-response-body: '{"statusCode": 429, "message": "Too many requests."}'
      http-status-code: TOO_MANY_REQUESTS
      rate-limits:
        - execute-condition: "T(org.springframework.security.core.context.SecurityContextHolder).getContext().getAuthentication() == null || !T(org.springframework.security.core.context.SecurityContextHolder).getContext().getAuthentication().isAuthenticated()"
          bandwidths:
            - capacity: 3
              time: 1
              unit: minutes
management:
  metrics:
    distribution:
      sla:
        http:
          server:
            requests: 50ms
      percentiles-histogram:
        http:
          server:
            requests: true
    tags:
      application: ${spring.application.name}
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always
      defaults:
        enabled: false
      db:
        enabled: true
      diskspace:
        enabled: true
  tracing:
    sampling:
      probability: 1.0
  otlp:
    metrics:
      export:
        step: 10s
    tracing:
      export:
        step: 10s

application:
  server-url: ${SERVER_URL}
  version: @project.version@
  security:
    firebase:
      storage-account-key: ${FIREBASE_STORAGE_ACCOUNT_KEY}
      db-url: https://fir-poc-b1a3d-default-rtdb.firebaseio.com/
    permitted-matchers:
      - /api-docs/**
      - /swagger-ui/**
      - /management/**
      - /actuator/**
      - /public/**
      - /api/payments/**
  api-groups:
    cases-api-group:
      - /api-web/cases/**
    templates-api-group:
      - /api-web/templates/**
    meetings-api-group:
      - /api-web/meetings/**
    accounts-api-group:
      - /api-web/companies/**
      - /api-web/lawyers/**
      - /api-web/users/**
      - /api-web/registration
    files-api-group:
      - /api-web/files/**
    payments-api-group:
      - /api/payments/**
  cron:
    user-synchronzation: 0 0 * * * ?
  web-mvc:
    api-web-prefix: /api-web
    api-prefix: /api
  legal-case-state-duration:
    acceptance-deadline-hours: 24
    completion-deadline-hours: 72
  legal-case-pricing:
    basic-case-price: 100
    advanced-case-price: 150

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    oauth2-redirect-url: ${application.server-url}/swagger-ui/oauth2-redirect.html
    persist-authorization: true
    operations-sorter: method

payment-gateway:
  payu:
    authorization-url: https://secure.snd.payu.com/pl/standard/user/oauth/authorize
    client-id: ${PAYU_CLIENT_ID}
    client-secret: ${PAYU_CLIENT_SECRET}
    base-url: https://secure.snd.payu.com
    callback-url: https://webhook.site/d3452338-be41-43da-89f3-4018b1ff5d21
    grant-type: client_credentials